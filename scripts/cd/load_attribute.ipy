# config
HOME=os.environ['HOME']
cancer_type= os.environ['disease']
working_dir=os.environ['working_dir']
script_dir = os.environ['script_dir']

os.chdir(working_dir)
%run -i -n {script_dir}/util/util.py #today_stamp
%run -i -n {script_dir}/util/convert_attribute.py

# trial_attribute
raw_csv = 'trial_attribute_raw_.csv'
res = convert_trial_attribute_plus_m_l(raw_csv)
res.fillna('').groupby('attribute_id')\
    .agg(dict(inclusion=['unique'], exclusion=['unique']
        , ie_mandatory=['unique'], ie_logic=['unique']))\
    .to_csv('trial_attribute_ie_summary.csv')
!open trial_attribute_ie_summary.csv

# cutomized conversoins and export
mand = res['ie_mandatory'].apply(lambda x:
        True if x in ('Y', 'M')
        else False if x in ('N', 'n')
        else None)
res['ie_mandatory'] = mand

#summarize_ie_value(res).to_csv('trial_attribute_ie_summary.csv')
res_csv=f'trial_attribute_raw_{today_stamp()}.csv'
res.to_csv(res_csv, index=False)
!ln -sf {res_csv} trial_attribute_raw.csv
!load_into_db_schema_some_csvs.py -d rimsdw ct_{cancer_type} trial_attribute_raw.csv
#toda: add virtual attributes: stage I, II, III; menapausal

# crit_attribute
raw_csv='crit_attribute_raw_.csv'
res = convert_crit_attribute(raw_csv)
res['attribute_id'] = res.attribute_id.apply(lambda x:
        f'{x[:3]}{int(x[3:]):03}')
summarize_crit_attribute(res)
res_csv=f'crit_attribute_raw_{today_stamp()}.csv'
res.to_csv(res_csv, index=False)
#!open {res_csv}
!ln -sf {res_csv} crit_attribute_raw.csv
!load_into_db_schema_some_csvs.py -d rimsdw ct_{cancer_type} crit_attribute_raw.csv
# todo: remove the rows without attribute_id/code_type

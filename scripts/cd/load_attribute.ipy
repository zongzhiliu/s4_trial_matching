# config
HOME=os.environ['HOME']
disease = os.environ['disease']
working_schema = os.environ['working_schema']
working_dir=os.environ['working_dir']
script_dir = os.environ['script_dir']

os.chdir(working_dir)
%run -i -n {script_dir}/util/util.py #today_stamp
%run -i -n {script_dir}/util/convert_attribute.py

# trial_attribute
raw_csv = 'trial_attribute_raw_.csv'
res = convert_trial_attribute_plus_m(raw_csv)
res.fillna('').groupby('attribute_id')\
    .agg(dict(inclusion=['unique'], exclusion=['unique']
        , ie_mandatory=['unique']))\
    .to_csv('trial_attribute_ie_summary.csv')
#!open trial_attribute_ie_summary.csv

# cutomized conversoins and export
tmp = res.ie_mandatory.apply(lambda x: np.nan if x=='or' else x)
res['ie_mandatory'] = tmp

# pick only the selected trials
trial_info = pd.read_csv('trial_info.csv')
trial_id = trial_info.trial_id[trial_info.indication==disease]
sele = res.trial_id.isin(trial_id)

#summarize_ie_value(res).to_csv('trial_attribute_ie_summary.csv')
res_csv=f'trial_attribute_raw_{today_stamp()}.csv'
res.loc[sele,:].to_csv(res_csv, index=False)
!ln -sf {res_csv} trial_attribute_raw.csv

!load_into_db_schema_some_csvs.py -d rdmsdw {working_schema} trial_attribute_raw.csv


# crit_attribute
raw_csv='crit_attribute_raw_.csv'
res = convert_crit_attribute(raw_csv)

summarize_crit_attribute(res)
res_csv=f'crit_attribute_raw_{today_stamp()}.csv'
res.to_csv(res_csv, index=False)
#!open {res_csv}
!ln -sf {res_csv} crit_attribute_raw.csv
!load_into_db_schema_some_csvs.py -d rdmsdw {working_schema} crit_attribute_raw.csv

